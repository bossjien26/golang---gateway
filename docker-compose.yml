version: "3.7"

networks:
  kong-networks:
    driver: bridge

services:
  kong:
    # container_name: kong-test
    build:
      context: .
      dockerfile: gowait/Dockerfile
    # image: kong:latest
    # volumes:
    #   - ./kong.yml:/usr/local/kong/declarative/kong.yml
    #   - ./gowait/go-wait:/usr/local/bin/go-wait
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PLUGINS=go-wait
      - KONG_PLUGINSERVER_NAMES=go-wait
      - KONG_PLUGINSERVER_GO_WAIT_QUERY_CMD=/usr/local/bin/go-wait -dump
      - KONG_LOG_LEVEL=info
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      # - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    networks:
      - kong-networks
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure  
    ports:
      - "8000:8000"
      - "8443:8443"
      # - "127.0.0.1:8001:8001"
      # - "127.0.0.1:8444:8444"
  app1:
    build: ./app1
    image: kong-app-nodejs:1.1
    container_name: kong-app-nodejs
    networks:
      - kong-networks
    ports:
      - "3001:3001"
    restart: on-failure

  redis:                            # 可以隨意命名，通常以有意義的字串命名
    image: redis:5.0.5-alpine       # 服務容器，若無指定版號表示使用 latest 版本， alpine 容器佔用空間較小，通常建議使用
    container_name: redis-test
    ports:
      - "6379:6379"
    networks:
      - kong-networks
